{"version":3,"sources":["App.js","serviceWorker.js","index.js","assets/battle.wav"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setDirection","event","keyCode","velocity","state","snake","col","v","objectSpread","row","setState","_ref","_ref2","_ref3","_ref4","move","moveTime","_ref5","_ref5$snake","head","tail","apple","collideWithApple","moveInterval","isCollideApple","nextState","concat","toConsumableArray","randomApple","score","length","Math","min","floor","pop","isCollideEdge","isTail","bg_m","pause","gameOver","SIZE","_this$state","isApple","cell","isHead","undefined","find","t","handleStart","console","log","resetGame","_this$state2","board","createBoard","randomCell","play","gameLoop","CELL_W","CELL_H","BOARD_W","BOARD_H","lastTime","Audio","bg_music","loop","addEventListener","currentTime","Array","from","y","x","newApple","random","document","body","_this2","time","arguments","_this$state3","deltaTime","requestAnimationFrame","_this3","_this$state4","boardContext","map","react_default","a","createElement","key","className","role","aria-label","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4e3e6dac.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport bg_music from './assets/battle.wav';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.CELL_W = 30;\n    this.CELL_H = 30;\n    this.SIZE = 20;\n    this.BOARD_W =this.CELL_W*this.SIZE;\n    this.BOARD_H =this.CELL_H*this.SIZE;\n    this.moveTime = 0;\n\n    this.lastTime = 0;\n    //\n    this.bg_m = new Audio(bg_music); \n    if (typeof this.bg_m.loop == 'boolean')\n    {\n      this.bg_m.loop = true;\n    }\n    else\n    {\n      this.bg_m.addEventListener('ended', function() {\n        this.currentTime = 0;\n        this.play();\n      }, false);\n    }\n    this.bg_m.play();\n    //\n    this.state={\n      moveInterval:1000,\n      board : [],\n      apple : {\n        row: 0,\n        col: 0\n      },\n      snake:{\n        head:{\n          row:Math.floor(this.SIZE/2)-1,\n          col:Math.floor(this.SIZE/2)-1\n        },\n        tail:[],\n        velocity:{\n          row:1,\n          col:0,\n        }\n      },\n      score:0,\n      gameOver:false\n    }\n\n    this.createBoard = ()=>{\n      const board = Array.from({length:this.SIZE},(row,y)=>Array.from({length:this.SIZE},(col,x)=>{\n        return {row:y,col:x}\n      }))\n\n      return board;\n    }\n    this.randomApple = () => {\n      const {snake:{head}} = this.state;\n      const newApple = {\n        row:Math.floor(Math.random()*(this.SIZE-2))+1,//1-18\n        col:Math.floor(Math.random()*(this.SIZE-2))+1,//1-18\n      }\n      if((newApple.row === head.row && newApple.col === head.col) \n        || this.isTail(newApple)) {\n          return this.randomApple();\n        }\n        else {\n          return newApple;\n        }\n    }\n    this.randomCell = ()=>{\n      return {\n        row:Math.floor(Math.random()*(this.SIZE-2))+1,//1-18\n        col:Math.floor(Math.random()*(this.SIZE-2))+1,//1-18\n      }\n    }\n    this.state.board = this.createBoard();\n    this.state.apple = this.randomApple();\n    this.state.snake.head = this.randomCell();\n    document.body.addEventListener('keypress',(event)=>this.setDirection(event));\n    this.gameLoop();\n  }\n  //\n  setDirection = (event) => {\n    if(event.keyCode===52){\n      // console.log(\"LEFT\");\n      const {snake:{velocity}} = this.state;\n      if(velocity.col===1) return\n      let v = {...velocity};\n      v.row = 0;\n      v.col = -1;\n      this.setState(({snake})=>{\n        return {\n          snake:{\n            ...snake,\n            velocity:v\n          }\n        };\n      });\n    }else if(event.keyCode===56){\n      \n      // console.log(\"UP\");\n      const {snake:{velocity}} = this.state;\n      if(velocity.row===1) return;\n      let v = {...velocity};\n      v.row = -1;\n      v.col = 0;\n      this.setState(({snake})=>{\n        return {\n          snake:{\n            ...snake,\n            velocity:v\n          }\n        };\n      });\n    }else if(event.keyCode===54){\n      // console.log(\"RIGHT\");\n      const {snake:{velocity}} = this.state;\n      if(velocity.col===-1) return;\n      let v = {...velocity};\n      v.row = 0;\n      v.col = 1;\n      this.setState(({snake})=>{\n        return {\n          snake:{\n            ...snake,\n            velocity:v,\n          }\n        };\n      });\n    }else if(event.keyCode===50){\n      // console.log(\"DOWN\")\n      const {snake:{velocity}} = this.state;\n      if(velocity.row===-1) return;\n      let v = {...velocity};\n      v.row = 1;\n      v.col = 0;\n      this.setState(({snake})=>{\n        return {\n          snake:{\n            ...snake,\n            velocity:v\n          }\n        };\n      });\n    }\n  }\n  //\n  gameLoop(time=0){\n    const {gameOver,moveInterval} = this.state;\n    if(gameOver) return;\n\n    let deltaTime = time - this.lastTime;\n    this.lastTime = time;\n    this.moveTime+=deltaTime;\n\n    if(this.moveTime >= moveInterval){\n      //\n      this.move();\n      //\n    }\n    requestAnimationFrame((time)=>this.gameLoop(time))\n  }\n\n  move = () =>{\n    this.moveTime = 0;\n    this.setState(({snake,snake:{head,tail},apple,moveInterval})=>{\n      // console.log(\"UPDATER\")\n      const collideWithApple = this.isCollideApple();\n     \n      const nextState = {\n        snake:{\n          ...snake,\n          head:{\n            row:head.row+snake.velocity.row,\n            col:head.col+snake.velocity.col\n          },\n          tail:[head,...tail]\n        },\n        apple:collideWithApple ? this.randomApple() : apple,\n        score:tail.length,\n        moveInterval:tail.length ? Math.min(Math.floor(1000/tail.length) + 200,800): 1000\n      }\n      if(!collideWithApple) {nextState.snake.tail.pop()}\n      return nextState;\n    }\n    ,()=>{\n      // console.log(\"CALLBACK FROM setStat()\")\n      if(this.isCollideEdge() || this.isTail(this.state.snake.head)){\n        this.bg_m.pause();\n        this.setState({\n          gameOver:true,\n        })\n      } \n      return;\n    });\n    //\n  }\n\n  //\n  isCollideEdge = ()=> {\n    const {snake:{head}} = this.state;\n    if(head.row < 0\n      || head.row > this.SIZE -1\n      || head.col < 0\n      || head.col > this.SIZE -1\n      ){\n        return true;\n      }\n    return false;\n  }\n  //\n  isCollideApple = () => {\n    const {snake:{head},apple} = this.state;\n    return apple.row===head.row && apple.col === head.col;\n  }\n  //\n  isApple = (cell) =>{\n    const {apple} = this.state;\n    return cell.row === apple.row && cell.col === apple.col;\n  }\n  //\n  isHead = (cell) => {\n    const {snake:{head}} = this.state;\n    return cell.row===head.row && cell.col === head.col;\n  }\n  //\n  isTail = (cell) => {\n    const {snake:{tail}} = this.state;\n    if(tail.find((t)=>{\n        return t.row===cell.row && t.col === cell.col;\n    })!==undefined){\n      return true;\n    };\n    return false;\n  }\n  //\n  handleStart=()=>{\n    console.log(\"START NEW GAME\");\n    this.resetGame();\n  }\n  resetGame = () => {\n    // console.log(\"RESET GAME\");\n\n    let {board,apple,snake:{head}} = this.state;\n    board = this.createBoard();\n    apple = this.randomApple();\n    head = this.randomCell();\n    this.bg_m.play();\n    this.setState(()=>{\n      return {\n        board,\n        apple,\n        snake:{\n          head,\n          tail:[],\n          velocity:{\n            row:1,\n            col:0,\n          }\n        },\n        score:0,\n        gameOver:false,\n        moveInterval:1000\n      }\n    },()=>this.gameLoop());\n\n  }\n  //\n  render(){\n    // console.log(\"RENDER\")\n    const {board,gameOver,snake:{head},score} = this.state;\n\n    let boardContext = (\n      board.map((row,y)=>{\n        return row.map((cell,x)=>{\n          return (\n            <div key={`[${x};${y}]`}\n            className={this.isHead(cell) ? \"cell snake-head\" : this.isApple(cell) ? \"cell apple\": this.isTail(cell) ? \"cell snake-tail\" : \"cell\"}>\n            [{x};{y}]\n            </div>)\n        });\n      })\n    )\n    if(gameOver){\n      boardContext = (\n        <div className=\"result-board\">\n          <p className=\"game-over\">GAME OVER</p>\n          <span className=\"game-pad\" role=\"img\" aria-label=\"game-pad\">🎮</span>\n          <button className=\"try-again\" onClick={()=>{this.handleStart()}}>Try again</button>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n\n        <div className=\"dashboard\">\n          <h2>Controls</h2>\n          <span className=\"snake-logo\" role=\"img\" aria-label=\"snake-image\">🐍</span>\n          <p className=\"score\">Score: <strong>{score}</strong></p>\n          <button className=\"reset-game\" onClick={()=>this.resetGame()}>Reset</button>\n        </div>\n\n        <div className=\"game-board\">\n          <h1>React Snake Game <span className=\"snake-icon\" role=\"img\" aria-label=\"snake-icon\">🐍</span></h1>\n          <div className=\"board\">\n            {\n              boardContext\n            }\n          </div>\n          <div className=\"tips\">\n            {this.isCollideEdge() ? \n              <p>You've really broken your head against the wall!\n              <span role=\"img\" aria-label=\"tip-icon-bell\"> 🔔 </span>\n              Who does this like you?\n              <span role=\"img\" aria-label=\"tip-icon-dizzy\"> 😵 </span>\n              </p>\n              : this.isTail(head) ?\n              <p>Bon appetit!\n              <span role=\"img\" aria-label=\"tip-icon-yourself\"> 😇 </span>\n              Who does eat yourself!!!. You are a cannibal, brrr\n              </p>\n              :\n              this.isCollideApple() ? \n              <p>Bon appetit!\n              <span role=\"img\" aria-label=\"tip-icon-eat\"> 👌 </span>\n              You become fatter, but you are young, so it is no problem, but later...\n              </p>\n              :\n              <p>Eat the apples\n              <span role=\"img\" aria-label=\"tip-icon-apple\"> 🍎 </span>\n              , avoid own tail and edges\n              <span role=\"img\" aria-label=\"tip-icon-wall\"> ⚠️ </span>\n              </p>\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/battle.e71671b3.wav\";"],"sourceRoot":""}